{"ast":null,"code":"var _jsxFileName = \"/Users/lenkazivkovic/Desktop/react-with-typescript/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport List from './components/List';\nimport AddToList from './components/AddToList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [number, setNumber] = useState<number>(5);  \n  // const changeNumber = () => {\n  //   setNumber(10)\n  // }\n  const [people, setPeople] = useState([{\n    name: \"Lenka\",\n    age: 24,\n    url: \"https://i.pinimg.com/280x280_RS/83/32/35/833235a43e3aaf563eee130c430ba886.jpg\",\n    note: \"I made this app!\"\n  }, {\n    name: \"You\",\n    age: 0,\n    url: \"https://i.pinimg.com/280x280_RS/83/32/35/833235a43e3aaf563eee130c430ba886.jpg\",\n    note: \"I would love for you to come!\"\n  }, {\n    name: \"Bill Gates\",\n    age: 68,\n    url: \"https://i.pinimg.com/280x280_RS/83/32/35/833235a43e3aaf563eee130c430ba886.jpg\",\n    note: \"I made this app!\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"People invited to my party\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      people: people\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddToList, {\n      people: people,\n      setPeople: setPeople\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1Urg/MhPC3cDEo8EIvI3HyZBLCA=\");\n\n_c = App;\nexport default App; // useState hook is responsible for storing data inside of a component \n// interface defines the syntax for classes to follow, they facilitate not just object-oriented programming but also type-checking \n// in react we pass data through props \n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lenkazivkovic/Desktop/react-with-typescript/src/App.tsx"],"names":["React","useState","List","AddToList","App","people","setPeople","name","age","url","note"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAWA,SAASC,GAAT,GAAe;AAAA;;AACb;AAEA;AACA;AACA;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAmB,CACrD;AACEM,IAAAA,IAAI,EAAG,OADT;AAEEC,IAAAA,GAAG,EAAE,EAFP;AAGEC,IAAAA,GAAG,EAAG,+EAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GADqD,EAOrD;AACEH,IAAAA,IAAI,EAAG,KADT;AAEEC,IAAAA,GAAG,EAAE,CAFP;AAGEC,IAAAA,GAAG,EAAG,+EAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAPqD,EAarD;AACEH,IAAAA,IAAI,EAAG,YADT;AAEEC,IAAAA,GAAG,EAAE,EAFP;AAGEC,IAAAA,GAAG,EAAG,+EAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAbqD,CAAnB,CAApC;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEL;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEA,MAAnB;AAA2B,MAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAnCQF,G;;KAAAA,G;AAqCT,eAAeA,GAAf,C,CAGA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport List from './components/List';\nimport AddToList from './components/AddToList';\n\nexport interface IState {\n  people: {\n    name: string, \n    age: number, \n    url: string, \n    note? : string\n  }[]\n}\n\nfunction App() {\n  // const [number, setNumber] = useState<number>(5);  \n\n  // const changeNumber = () => {\n  //   setNumber(10)\n  // }\n\n  const [people, setPeople] = useState<IState[\"people\"]>([\n    {\n      name : \"Lenka\",\n      age: 24, \n      url : \"https://i.pinimg.com/280x280_RS/83/32/35/833235a43e3aaf563eee130c430ba886.jpg\",\n      note: \"I made this app!\"\n    },\n    {\n      name : \"You\",\n      age: 0, \n      url : \"https://i.pinimg.com/280x280_RS/83/32/35/833235a43e3aaf563eee130c430ba886.jpg\",\n      note: \"I would love for you to come!\"\n    }, \n    {\n      name : \"Bill Gates\",\n      age: 68, \n      url : \"https://i.pinimg.com/280x280_RS/83/32/35/833235a43e3aaf563eee130c430ba886.jpg\",\n      note: \"I made this app!\"\n    }\n  ])\n\n  return (\n    <div className=\"App\">\n      <h1>People invited to my party</h1>\n      <List people={people}/>\n      <AddToList people={people} setPeople={setPeople} />\n    </div>\n  );\n}\n\nexport default App;\n\n\n// useState hook is responsible for storing data inside of a component \n// interface defines the syntax for classes to follow, they facilitate not just object-oriented programming but also type-checking \n// in react we pass data through props "]},"metadata":{},"sourceType":"module"}